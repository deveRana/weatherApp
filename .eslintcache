[{"D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\index.js":"1","D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\reportWebVitals.js":"2","D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\App.jsx":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":3735,"mtime":1634924707022,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"pg0w3i",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\index.js",[],["16","17"],"D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\reportWebVitals.js",[],"D:\\Web Development\\Rana's MERN Projects\\Weather App\\watherapp\\src\\App.jsx",["18"],"import React ,{ useEffect , useState} from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport { HiOutlineLocationMarker } from 'react-icons/hi';\nimport { RiTempColdLine } from 'react-icons/ri';\nimport { WiHumidity } from 'react-icons/wi';\n\n\nfunction App() {\n\n  const [data, setData] = useState({});\n  const [lat, setLat] = useState();\n  const [lon, setLon] = useState();\n\n  const fetchWeather = async ()=>{\n    \n    const res = await axios(`http://api.weatherapi.com/v1/current.json?key=140b8dad811840b4ab4125536212210&q=${lat},${lon}&aqi=no` , {\n      header : 'Access-Control-Allow-Origin'\n    } )\n    \n    setData(res.data)\n\n  }\n\n  const getCity = ()=>{\n\n      const geoSuccess = (position)=>{\n         setLat(position.coords.latitude)\n         setLon(position.coords.longitude)\n      }\n\n      if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(geoSuccess);\n        }else{\n          console.log(\"Something WEnt Wrong\");\n        }\n\n      \n\n  }  \n  \n\n  useEffect( ()=>{\n    getCity();\n\n  } , [] )\n\n  useEffect(()=>{\n    fetchWeather();\n  },[lon] )\n\n\n\n\n  return (\n    <div className=\"appContainer\">\n\n      <div className=\"container\">\n         \n         <div className=\"upperContainer\">\n\n              <div className=\"weatherType\">\n                    <p> {  Object.keys(data).length > 0 ? data.current.condition.text : ''}  </p> \n              </div>\n\n               <div className=\"weatherTypePng\">\n                         <img src={Object.keys(data).length > 0 ? data.current.condition.icon : ''}   alt=\"\" srcset=\"\" />\n                </div>\n\n              <div className=\"cityTemperature\">\n                  <p> <span> {  Object.keys(data).length > 0 ? data.current.temp_c : '' } </span> °C </p>\n              </div>\n\n              <div className=\"cityLoca\">\n                  <p>  <HiOutlineLocationMarker/>  <span> {  Object.keys(data).length > 0 ? data.location.name : ''} </span> , <span> {  Object.keys(data).length > 0 ? data.location.region : ''} </span> </p>\n              </div>\n\n         </div>\n\n\n          <div className=\"lowerContainer\">\n\n                    <div className=\"leftLowerContainer\">\n\n                          <div className=\"latitude\">\n                                <p> Lat : <span> {  Object.keys(data).length > 0 ? (data.location.lat) : ''} </span> </p>\n                          </div>\n                          <div className=\"feelLike\">\n\n                            <div className=\"icon-1\">\n                                <RiTempColdLine/>\n                            </div>\n \n                            <div className=\"values\">\n                              <span>  {  Object.keys(data).length > 0 ? data.current.feelslike_c : '' }  °C </span> \n                              <p>Feels Like</p>\n                            </div>\n\n                          </div>\n\n                    </div>\n\n                    <div className=\"rightLowerContainer\">\n\n                          <div className=\"longitude\">\n                               <p> Lon : <span> { Object.keys(data).length > 0 ? (data.location.lon) : ''} </span> </p>\n                          </div>\n\n                          <div className=\"humidity\">\n\n                              <div className=\"icon-2\">\n                                    <WiHumidity/>\n                                </div>\n\n                                <div className=\"values\">\n                                  <span> { Object.keys(data).length > 0 ? data.current.humidity : ''}  %</span> \n                                  <p>Humidity</p>\n                                </div>\n\n                          </div>\n\n                    </div>\n\n          </div>\n\n      </div>\n\n    </div>\n  );\n}\n\n \n\nexport default App;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":50,"column":5,"nodeType":"25","endLine":50,"endColumn":10,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWeather'. Either include it or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [fetchWeather, lon]",{"range":"32","text":"33"},[1082,1087],"[fetchWeather, lon]"]